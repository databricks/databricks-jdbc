<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.databricks</groupId>
    <artifactId>databricks-jdbc-oss</artifactId>
    <version>0.1.1</version>
    <packaging>jar</packaging>
    <name>Databricks JDBC Driver</name>
    <description>Databricks JDBC Driver.</description>
    <url>https://github.com/databricks/databricks-jdbc</url>
    <scm>
        <connection>scm:git:https://github.com/databricks/databricks-jdbc.git</connection>
        <developerConnection>scm:git:https://github.com/databricks/databricks-jdbc.git</developerConnection>
        <url>https://github.com/databricks/databricks-jdbc</url>
    </scm>
  <properties>
    <arrow.version>13.0.0</arrow.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <mockito.version>5.2.0</mockito.version>
    <jackson.version>2.15.1</jackson.version>
    <google.guava.version>33.0.0-jre</google.guava.version>
    <junit.jupiter.version>5.9.2</junit.jupiter.version>
    <google.findbugs.annotations.version>3.0.1</google.findbugs.annotations.version>
    <immutables.value.version>2.9.2</immutables.value.version>
    <httpclient.version>4.5.14</httpclient.version>
    <log4japi.version>2.21.1</log4japi.version>
    <log4jcore.version>2.21.1</log4jcore.version>
    <spotless.version>2.43.0</spotless.version>
    <commons-io.version>2.13.0</commons-io.version>
    <databricks-sdk.version>0.17.0</databricks-sdk.version>
    <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    <sql-logic-test.version>0.3</sql-logic-test.version>
    <lz4-compression.version>1.8.0</lz4-compression.version>
    <thrift.version>0.19.0</thrift.version>
    <annotation.version>1.3.5</annotation.version>
    <slt.executor>dbsql</slt.executor>
    <slt.token>dummy-token</slt.token>
    <wiremock.version>3.5.4</wiremock.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.databricks</groupId>
      <artifactId>databricks-sdk-java</artifactId>
      <version>${databricks-sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-core</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-unsafe</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${spotless.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-netty</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>${thrift.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>${google.findbugs.annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${google.guava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4japi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4jcore.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>${immutables.value.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>sql-logic-test</artifactId>
      <version>${sql-logic-test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <version>${lz4-compression.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>${annotation.version}</version>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <systemPropertyVariables>
              <log4j.configurationFile>file:src/main/resources/log4j2.xml</log4j.configurationFile>
            </systemPropertyVariables>
            <excludes>
              <exclude>**/integration/**/*.java</exclude>
              <exclude>**/*MetadataBenchmarkingTest.java</exclude>
              <exclude>**/*LargeQueriesBenchmarkingTest.java</exclude>
            </excludes>
            <argLine>
              @{argLine}
              --add-opens=java.base/java.nio=ALL-UNNAMED
              -Dnet.bytebuddy.experimental=true
            </argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
          <configuration>
            <executable>java</executable>
            <arguments>
              <argument>--add-opens=java.base/java.nio=ALL-UNNAMED</argument>
              <argument>-classpath</argument>
              <classpath />
              <argument>com.databricks.jdbc.sqllogictest.SLTMain</argument>
              <argument>-e</argument>
              <argument>${slt.executor}</argument>
              <argument>-p</argument>
              <argument>${slt.token}</argument>
            </arguments>
            <classpathScope>test</classpathScope>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <testExcludes>
              <testExclude>com/databricks/jdbc/integration/benchmarking/MetadataBenchmarkingTest.java</testExclude>
              <testExclude>com/databricks/jdbc/integration/benchmarking/LargeQueriesBenchmarkingTest.java</testExclude>
            </testExcludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <configuration>
            <archive>
              <manifest>
                <mainClass>com.databricks.jdbc.driver.DatabricksDriver</mainClass>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.39.0</version>
          <executions>
            <execution>
              <id>format</id>
              <goals>
                <goal>apply</goal>
              </goals>
              <phase>compile</phase>
            </execution>
          </executions>
          <configuration>
            <java>
              <googleJavaFormat>
                <version>1.18.1</version>
              </googleJavaFormat>
            </java>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.11</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <excludes>
              <exclude>**/EnvironmentVariables*</exclude>
              <exclude>**/client/impl/sdk/DatabricksMetadataSdkClient*</exclude> <!-- TODO(PECO-1502): Remove once fixed -->
              <exclude>**/*Exception*</exclude>
              <exclude>**/types/**</exclude>
              <exclude>**/client/sqlexec/**</exclude>
              <exclude>**/*Constants*</exclude>
              <exclude>**/thrift/generated/**</exclude>
              <exclude>**/*driver/DatabricksJdbcConstants*</exclude>
              <exclude>**/CommandName*</exclude>
            </excludes>
          </configuration>
        </plugin>
      </plugins>
    </build>
</project>
