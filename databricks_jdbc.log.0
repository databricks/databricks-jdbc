2025-05-26 17:47:40 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:40 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:40 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHttpPath - String getHttpPath()
2025-05-26 17:47:40 FINE com.databricks.jdbc.api.impl.DatabricksSession#open - public void open()
2025-05-26 17:47:40 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#createSession - public Session createSession(Compute cluster = {SQL Warehouse with warehouse ID {dd43ee29fedd958d}}, String catalog = {null}, String schema = {default}, Map<String, String> sessionConf = {{}})
2025-05-26 17:47:40 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftAccessor#getThriftResponse - Fetching thrift response for request TOpenSessionReq(client_protocol:__HIVE_JDBC_WORKAROUND, configuration:{}, client_protocol_i64:42249, initialNamespace:TNamespace(schemaName:default), canUseMultipleCatalogs:true)
2025-05-26 17:47:40 INFO com.databricks.jdbc.dbclient.impl.http.GlobalAsyncHttpClient$GlobalAsyncHttpClientHolder#<init> - Initializing global async HTTP client
2025-05-26 17:47:40 FINE com.databricks.jdbc.dbclient.impl.http.DatabricksHttpClient#execute - Executing HTTP request https://e2-dogfood.staging.cloud.databricks.com:443//sql/1.0/warehouses/dd43ee29fedd958d
2025-05-26 17:47:41 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#createSession - Session created with ID 01f03a59-85aa-184b-01f0-3a5985aa184b
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksSession#getDatabricksClient - public IDatabricksClient getDatabricksClient()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHttpPath - String getHttpPath()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksConnection#prepareStatement - public PreparedStatement prepareStatement(String sql = {SELECT * FROM ___________________first.jprakash.large_data WHERE id = ? AND data > ? LIMIT 5})
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksPreparedStatement#setInt - public void setInt(int parameterIndex, int x)
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksPreparedStatement#setString - public void setString(int parameterIndex, String x)
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksPreparedStatement#executeQuery - public ResultSet executeQuery()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksStatement#executeInternal - DatabricksResultSet executeInternal(String sql = SELECT * FROM ___________________first.jprakash.large_data WHERE id = ? AND data > ? LIMIT 5, Map<Integer, ImmutableSqlParameter> params = {{1=SqlParameter{value=1000007, type=INT, cardinal=1}, 2=SqlParameter{value=1a3a2386-b14b-43ca-aa7e-f25ad157cc79, type=STRING, cardinal=2}}}, StatementType statementType = {QUERY})
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksSession#getDatabricksClient - public IDatabricksClient getDatabricksClient()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksSession#getComputeResource - public String getComputeResource()
2025-05-26 17:47:41 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#executeStatement - public DatabricksResultSet executeStatement(String sql = {SELECT * FROM ___________________first.jprakash.large_data WHERE id = ? AND data > ? LIMIT 5}, Compute cluster = {SQL Warehouse with warehouse ID {dd43ee29fedd958d}}, Map<Integer, ImmutableSqlParameter> parameters = {{1=SqlParameter{value=1000007, type=INT, cardinal=1}, 2=SqlParameter{value=1a3a2386-b14b-43ca-aa7e-f25ad157cc79, type=STRING, cardinal=2}}}, StatementType statementType = {QUERY}, IDatabricksSession session)
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksStatement#getQueryTimeout - public int getQueryTimeout()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksSession#getSessionInfo - public String getSessionInfo()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksStatement#getMaxRows - public int getMaxRows()
2025-05-26 17:47:41 FINE com.databricks.jdbc.api.impl.DatabricksStatement#getQueryTimeout - public int getQueryTimeout()
2025-05-26 17:47:41 FINE com.databricks.jdbc.dbclient.impl.http.DatabricksHttpClient#execute - Executing HTTP request https://e2-dogfood.staging.cloud.databricks.com:443//sql/1.0/warehouses/dd43ee29fedd958d
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksStatement#setStatementId - void setStatementId {01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d}
2025-05-26 17:47:43 FINE com.databricks.jdbc.common.util.DatabricksThriftUtil#checkDirectResultsForErrorStatus - direct result operation status being verified for success response
2025-05-26 17:47:43 FINE com.databricks.jdbc.common.util.DatabricksThriftUtil#checkDirectResultsForErrorStatus - direct results metadata being verified for success response
2025-05-26 17:47:43 FINE com.databricks.jdbc.common.util.DatabricksThriftUtil#checkDirectResultsForErrorStatus - direct results close operation verified for success response
2025-05-26 17:47:43 FINE com.databricks.jdbc.common.util.DatabricksThriftUtil#checkDirectResultsForErrorStatus - direct result set being verified for success response
2025-05-26 17:47:43 INFO com.databricks.jdbc.api.impl.ExecutionResultFactory#getResultHandler - Processing result of format ARROW_BASED_SET from SQL Gateway
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.arrow.ArrowResultChunk#initializeData - Parsing data for chunk index 0 and statement 01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.arrow.ArrowResultChunk#initializeData - Data parsed for chunk index 0 and statement 01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksResultSetMetaData#<init> - Result manifest for statement {01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d} has schema: {TTableSchema(columns:[TColumnDesc(columnName:id, typeDesc:TTypeDesc(types:[<TTypeEntry primitiveEntry:TPrimitiveTypeEntry(type:BIGINT_TYPE)>]), position:1, comment:), TColumnDesc(columnName:data, typeDesc:TTypeDesc(types:[<TTypeEntry primitiveEntry:TPrimitiveTypeEntry(type:STRING_TYPE)>]), position:2, comment:), TColumnDesc(columnName:id2, typeDesc:TTypeDesc(types:[<TTypeEntry primitiveEntry:TPrimitiveTypeEntry(type:STRING_TYPE)>]), position:3, comment:), TColumnDesc(columnName:data2, typeDesc:TTypeDesc(types:[<TTypeEntry primitiveEntry:TPrimitiveTypeEntry(type:STRING_TYPE)>]), position:4, comment:)])}
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksStatement#executeInternal - Result retrieved successfully DatabricksResultSet[statementStatus=com.databricks.jdbc.api.impl.ExecutionStatus@120d3fd, statementId=01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d, statementType=QUERY, isClosed=false, wasNull=false, resultSetType=THRIFT_ARROW_ENABLED]
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksStatement#close - public void close()
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksStatement#close - public void close(boolean removeFromSession)
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksSession#getDatabricksClient - public IDatabricksClient getDatabricksClient()
2025-05-26 17:47:43 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#closeStatement - public void closeStatement(String statementId = {01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d}) using Thrift client
2025-05-26 17:47:43 FINE com.databricks.jdbc.common.util.DatabricksThriftUtil#getOperationHandle - getOperationHandle {01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d} for statementId {01f03a59-85eb-196c-01f0-3a5985eb196c}
2025-05-26 17:47:43 FINE com.databricks.jdbc.dbclient.impl.http.DatabricksHttpClient#execute - Executing HTTP request https://e2-dogfood.staging.cloud.databricks.com:443//sql/1.0/warehouses/dd43ee29fedd958d
2025-05-26 17:47:43 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#closeStatement - Statement 01f03a59-85eb-196c-a857-d99cb89385f4|338d529d-8272-46eb-8482-cb419466839d closed with status TStatus(statusCode:SUCCESS_STATUS)
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.arrow.ArrowResultChunk#logAllocatorStats - Chunk allocator stats Log - Event: BeforeRelease, Chunk Index: 0, Allocated Memory: 0, Peak Memory: 0, Headroom: 2147483647, Init Reservation: 0
2025-05-26 17:47:43 FINE com.databricks.jdbc.api.impl.DatabricksConnection#closeStatement - public void closeStatement(IDatabricksStatement statement)
2025-05-26 17:47:58 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:58 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:58 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHttpPath - String getHttpPath()
2025-05-26 17:47:58 FINE com.databricks.jdbc.api.impl.DatabricksSession#open - public void open()
2025-05-26 17:47:58 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#createSession - public Session createSession(Compute cluster = {SQL Warehouse with warehouse ID {dd43ee29fedd958d}}, String catalog = {null}, String schema = {default}, Map<String, String> sessionConf = {{}})
2025-05-26 17:47:58 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftAccessor#getThriftResponse - Fetching thrift response for request TOpenSessionReq(client_protocol:__HIVE_JDBC_WORKAROUND, configuration:{}, client_protocol_i64:42249, initialNamespace:TNamespace(schemaName:default), canUseMultipleCatalogs:true)
2025-05-26 17:47:58 INFO com.databricks.jdbc.dbclient.impl.http.GlobalAsyncHttpClient$GlobalAsyncHttpClientHolder#<init> - Initializing global async HTTP client
2025-05-26 17:47:58 FINE com.databricks.jdbc.dbclient.impl.http.DatabricksHttpClient#execute - Executing HTTP request https://e2-dogfood.staging.cloud.databricks.com:443//sql/1.0/warehouses/dd43ee29fedd958d
2025-05-26 17:47:59 FINE com.databricks.jdbc.dbclient.impl.thrift.DatabricksThriftServiceClient#createSession - Session created with ID 01f03a59-903c-1a0b-01f0-3a59903c1a0b
2025-05-26 17:47:59 FINE com.databricks.jdbc.api.impl.DatabricksSession#getDatabricksClient - public IDatabricksClient getDatabricksClient()
2025-05-26 17:47:59 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHostUrl - public String getHostUrl()
2025-05-26 17:47:59 FINE com.databricks.jdbc.api.impl.DatabricksConnectionContext#getHttpPath - String getHttpPath()
