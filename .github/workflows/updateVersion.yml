name: Update Version and Create PR from dev branch

on:
  workflow_dispatch:
    inputs:
      old_version:
        description: 'Old version to replace'
        required: true
      new_version:
        description: 'New version to update to'
        required: true
  pull_request:

jobs:
  update-version:
    runs-on:
      group: databricks-protected-runner-group
      labels: linux-ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      # 1. Checkout the dev repository (databricks-jdbc-dev)
      - name: Checkout dev repository
        uses: actions/checkout@v4
        with:
          # Specify the repository to checkout
          repository: databricks/databricks-jdbc-dev
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Set up Git configuration
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 2. Create a new branch for version update in dev repository
      - name: Create new branch in dev for version update
        id: create_branch
        run: |
          BRANCH_NAME="version-update-checka"
          git checkout -b "$BRANCH_NAME"
          echo "branch=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

      # 3. Replace old version with new version in repository files
      - name: Replace old version with new version
        run: |
          OLD_VERSION="0.9.9"
          NEW_VERSION="1.0.0"
          found=false
          for file in $(grep -FrIl "$OLD_VERSION" .); do
            found=true
            echo "Updating $file"
            sed -i "s/${OLD_VERSION}/${NEW_VERSION}/g" "$file"
          done
          if [ "$found" = false ]; then
            echo "No occurrences found."
          fi

      # 4. Commit changes
      - name: Commit changes
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Update version from $OLD_VERSION to $NEW_VERSION"
          else
            echo "No changes to commit."
          fi

      # 5. Push branch to dev repository
      - name: Push branch
        run: |
          BRANCH_NAME=${{ steps.create_branch.outputs.branch }}
          git push origin "$BRANCH_NAME"

      - name: Create cross-repository PR
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const owner = 'databricks';
            const repo = 'databricks-jdbc';
            const headBranch = '${{ steps.create_branch.outputs.branch }}';
            const head = 'databricks-jdbc-dev:' + headBranch;
            const base = 'main';
            const title = `Update version from ${{ github.event.inputs.old_version }} to ${{ github.event.inputs.new_version }}`;
            const body = `This PR updates all references from version ${{ github.event.inputs.old_version }} to ${{ github.event.inputs.new_version }}.`;
            try {
              const response = await github.rest.pulls.create({
                owner,
                repo,
                head,
                base,
                title,
                body
              });
              console.log("PR created:", response.data.html_url);
            } catch (error) {
              console.error("Failed to create PR:", error);
              core.setFailed(error.message);
            }