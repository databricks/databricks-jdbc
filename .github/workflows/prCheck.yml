# This will run for all PRs
name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  formatting-check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java-version: [21]  # For formatting, we don't need to run across multiple versions. Only sanity testing is required here, rest is taken care in the build.
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check formatting
        run: mvn --errors spotless:check

  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        java-version: [8, 11, 17, 21, 22]  # 22 is the latest version as of 2024 and 21 is the latest LTS

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ matrix.java-version }}
          version: latest
      - name: Check Unit Tests
        run: mvn --errors test -Dtest="com.databricks.jdbc.*.*Test, com.databricks.jdbc.*.*.*Test, !*IntegrationTests"

      - name: JaCoCo report
        run: mvn --batch-mode --errors jacoco:report --file pom.xml

      - name: Publish test coverage
        uses: codecov/codecov-action@v3
        with:
          files: target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: true
          verbose: true