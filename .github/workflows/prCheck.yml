# This will run for all PRs
name: Build

on:
  push:
    branches: [ main, benchmarking-branch ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, benchmarking-branch ]

jobs:
  formatting-check:
    strategy:
      fail-fast: false
      matrix:
        java-version: [21]  # For formatting, we don't need to run across multiple versions. Only sanity testing is required here, rest is taken care in the build.
    runs-on:
      group: databricks-protected-runner-group
      labels: linux-ubuntu-latest
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check formatting
        run: mvn --errors spotless:check

  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        java-version: [11, 17, 21]  # Adding LTS versions here. 21 is the latest LTS

    runs-on:
      group: databricks-protected-runner-group
      labels: linux-ubuntu-latest

    steps:
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Check Unit Tests
        run: mvn test -Dtest=!**/integration/**,!**/DriverTest.java

      - name: Install xmllint
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: JaCoCo report
        run: mvn --batch-mode --errors jacoco:report --file pom.xml

      - name: Extract codeCov percentage
        run: |
          COVERAGE_FILE="target/site/jacoco/jacoco.xml"
          COVERED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@covered)" $COVERAGE_FILE)
          MISSED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@missed)" $COVERAGE_FILE)
          TOTAL=$(($COVERED + $MISSED))
          PERCENTAGE=$(echo "scale=2; 100 * $COVERED / $TOTAL" | bc)
          echo $PERCENTAGE > coverage.txt
          echo "::set-output name=coverage::$PERCENTAGE"
      - name: Check coverage percentage
        run: |
          BRANCH_COVERAGE=$(cat coverage.txt)
          echo "Branch Coverage: $BRANCH_COVERAGE%"
          if (( $(echo "$BRANCH_COVERAGE < 85" | bc -l) )); then
            echo "Coverage is less than 85%"
            exit 1
          else
            echo "Coverage is equal to or greater than 85%"
          fi
